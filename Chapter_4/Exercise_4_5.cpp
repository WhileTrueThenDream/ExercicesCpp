/********************************************************* Exercises from book C++ Crash Course by Lospinoso. ********************************************************** Exercice 4-5.* Elaborate the TimerClass constructor to accept an additional const char* name paramter. * When TimerClass is destructed and prints to stdout, include the name of the timer in the output.     * \date last change: 28.09.2021* \author            amaia*/     #include <ctime>#include <cstdio>#include <unistd.h>#include <utility>#include <cstring>     struct TimerClass{            TimerClass(const char* name)    {        timestamp =  std::time(0);          std::strncpy(&timername[0], name, (sizeof(timername)-1));			           			    }          	    ~TimerClass(void)    {        time_t end_time = std::time(0);                    end_time =  std::time(0);  /* save current time*/          printf("Destructor called: %s, Timer duration: %d \n", timername, (int)(end_time -timestamp));		    }             private:    time_t timestamp;              /* timestamp of objects creation time */	char timername[10];                 /* timers name, 9 chars length max. */};     int main(void){    TimerClass myTimer{"Timer_1"};      return 0;	}